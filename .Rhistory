resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 3),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 200
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 200
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
# g = sample(3:5, 1)
x1 = x[sample(1:11, 4),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,53) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 5, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(11:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,53) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 5, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(11:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.9, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.9, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 100
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:4, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 300
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:5, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.9, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+ste
niter = 300
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:5, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.5, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 300
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:5, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.1, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
#pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
#dev.off()
niter = 300
result = NULL
resultM = matrix(0,niter,50) ## 50 if windows size is 8, it will be 14:63  ## 53 if size 5, 11:63
x=seriesT
for (i in 1:niter){
g = sample(3:5, 1)
x1 = x[sample(1:11, g),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha=0.9, step = 5, k = 50,
n_folds = 5, thresh = 0.9, make_plot = FALSE)  # varying alpha 0.1, 0.5, 0.9
result[[i]] = d$change_points
resultM[i,] = d$scores
}
pdf(file="Fig5-9w8.pdf")
par(mfrow=c(2,1))
plot(table(unlist(result)))
out = apply(resultM, 2, mean)
plot(14:63, out, type="l")  #1+step+size: length(score) + step+size
dev.off()
niter = 1000
resultM = matrix(0,niter,51)
result = NULL
load("drosophila.rda")
x=drosophila
for (i in 1:niter){
x1 = x[sample(1:4028, 40),]
d <- ts_detect(method="PL", x1, window_size = 8, alpha =0.1, step = 5, k = 50, n_folds = 5, thresh = 0.9, make_plot = FALSE)
result[[i]] = d$change_points
resultM[i,] = d$scores
}
niter = 1000
result = NULL
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=175)$changepoints[,1]
# printPercentage(i, niter)
}
#original changepoints: 31, 41, 59
library(InspectChangepoint)
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=175)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
#original changepoints: 31, 41, 59
library(InspectChangepoint)
y=inspect(x, threshold=100)
install.packages("RSpectra")
y=inspect(x, threshold=100)
niter = 1000
result = NULL
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=175)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=175)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=175)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=75)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
inspect(x, threshold=75)
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 40),]
result[[i]] = inspect(x, threshold=50)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
x= read.table(file="dros067.txt", sep="")
x=t(x)
niter = 200
result = NULL
for (i in 1:niter){
result[[i]] = inspect(x, threshold=40)$changepoints[,1]
printPercentage(i, niter)
}
niter = 200
result = NULL
for (i in 1:niter){
result[[i]] = inspect(x, threshold=40)$changepoints[,1]
#printPercentage(i, niter)
}
plot(table(unlist(result)))
niter = 300
result = NULL
for (i in 1:niter){
result[[i]] = inspect(x, threshold=140)$changepoints[,1]
#printPercentage(i, niter)
}
plot(table(unlist(result)))
niter = 300
result = NULL
for (i in 1:niter){
result[[i]] = inspect(x, threshold=20)$changepoints[,1]
#printPercentage(i, niter)
}
plot(table(unlist(result)))
par(mfrow=c(1,3))
niter = 1000
result = NULL
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=50)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
par(mfrow=c(3,1))
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=100)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=150)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)), xlab = "time points", ylab="frequencies", main="(C): threshold = 175")
par(mfrow=c(3,1))
niter = 1000
result = NULL
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=50)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)))
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=100)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)))
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=150)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)))
par(mfrow=c(3,1))
niter = 1000
result = NULL
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=50)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)),  ylab="Frequency")
for (i in 1:niter){
x=drosophila
x = x[sample(1:4028, 400),]
result[[i]] = inspect(x, threshold=100)$changepoints[,1]
# printPercentage(i, niter)
}
plot(table(unlist(result)),  ylab="Frequency")
plot(table(unlist(result)),  ylabl="Frequency")
plot(table(unlist(result)),  ylab="Frequency")
plot(table(unlist(result)),  ylab="Frequency")
plot(table(unlist(result)),  ylab="Frequency", xlab = "time points")
